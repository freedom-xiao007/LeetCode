"""
38. 外观数列
给定一个正整数 n（1 ≤ n ≤ 30），输出外观数列的第 n 项。

注意：整数序列中的每一项将表示为一个字符串。

「外观数列」是一个整数序列，从数字 1 开始，序列中的每一项都是对前一项的描述。前五项如下：

1.     1
2.     11
3.     21
4.     1211
5.     111221
第一项是数字 1

描述前一项，这个数是 1 即 “一个 1 ”，记作 11

描述前一项，这个数是 11 即 “两个 1 ” ，记作 21

描述前一项，这个数是 21 即 “一个 2 一个 1 ” ，记作 1211

描述前一项，这个数是 1211 即 “一个 1 一个 2 两个 1 ” ，记作 111221



示例 1:

输入: 1
输出: "1"
解释：这是一个基本样例。
示例 2:

输入: 4
输出: "1211"
解释：当 n = 3 时，序列是 "21"，其中我们有 "2" 和 "1" 两组，"2" 可以读作 "12"，也就是出现频次 = 1 而 值 = 2；类似 "1" 可以读作 "11"。所以答案是 "12" 和 "11" 组合在一起，也就是 "1211"。
通过次数116,843提交次数208,487


解题思路：
1.暴力解：直接从1开始穷举1-30的外观数列，然后根据输入值返回即可
    优化：穷举到n即可；或者将所有1-30结果静态化，直接返回即可
"""


class Solution:
    def countAndSay(self, n: int) -> str:
        def count(s: str) -> str:
            ans = ""
            num = s[0]
            count = 0
            for c in s:
                if c == num:
                    count += 1
                else:
                    ans += str(count) + num
                    num = c
                    count = 1
            ans += str(count) + num
            return ans

        def say(n) -> str:
            d = {1: "1"}
            for i in range(2, n+1):
                d[i] = count(d[i - 1])
            return d[n]

        if n == 1:
            return "1"
        return say(n)


if __name__ == "__main__":
    s = Solution()
    print(s.countAndSay(4))
